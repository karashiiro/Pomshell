@inject GameDataService gds;
@inject XIVAPIService xivapi;
<div class="character-card">
    <div>
        @foreach (var lang in Util.BuildLanguageArray(Character.Lang))
        {
            string iconName = lang + ".png";
            <img class="character-card-language @lang.ToLower()" src="/i/@iconName" width="16" height="16" />
        }
    </div>
    <div class="@Character.Rank.DefaultIfNull("member").ToLower()">
        <img class="character-card-avatar" src="@Character.Avatar" />
    </div>
    <p class="name"><a target="_blank" href="@Util.BuildLodestoneUrl(Character.ID)">@Character.Name</a></p>
    <p class="world">@Util.GetWorld(Character.Server)</p>
    <p class="last-seen">@_timeState</p>
</div>

@code {
    [Parameter]
    public CharacterSearchResult Character { get; set; }

    private string _timeState = "Loading...";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
            return;
        long time = await Pipelines.GetCharacterLastActivityTime(gds, xivapi, Character.ID);
        _timeState = BinaryDateTimeAsString(time);
    }

    public static string BinaryDateTimeAsString(long binary)
        => DateTime.FromBinary(binary).ToLocalTime().ToString("d/M/yyy\"\n\"H:mm");
}
